name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: 🔄 Checkout репозитория
        uses: actions/checkout@v3

      - name: 🐍 Установка Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🧹 Проверка кода (flake8)
        run: |
          pip install flake8
          flake8 src tests

      - name: 🧪 Запуск тестов (pytest)
        run: |
          pip install pytest
          pytest -s tests

      - name: 🤖 Обучение модели (src/train.py)
        run: python src/train.py

      - name: 📦 Загрузка модели как артефакта
        uses: actions/upload-artifact@v4
        with:
          name: model
          path: models/model.joblib

      - name: 🔮 Инференс модели (src/inference.py)
        run: python src/inference.py

      - name: 📦 Загрузка артефактов инференса
        uses: actions/upload-artifact@v4
        with:
          name: inference-results
          path: |
            predictions.csv
            report.html

  publish:
    name: Build & Push Docker image to GHCR
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🔄 Checkout репозитория
        uses: actions/checkout@v3

      - name: 📥 Download model artifact
        uses: actions/download-artifact@v4
        with:
          name: model
          path: models

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/olegturov/olegturov-ci-cd:latest

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Yandex Cloud CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH
          export PATH="$HOME/yandex-cloud/bin:$PATH"
          yc --version

      - name: Configure Yandex Cloud CLI
        run: |
          echo "${{ secrets.YC_SA_KEY_BASE64 }}" > key.json
          yc config set service-account-key key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          yc container registry configure-docker

      - name: Pull image from GHCR
        run: |
          docker pull ghcr.io/olegturov/olegturov-ci-cd:latest

      - name: Tag image for Yandex Container Registry
        run: |
          docker tag ghcr.io/olegturov/olegturov-ci-cd:latest cr.yandex/${{ secrets.YC_REGISTRY_ID }}/olegturov-ci-cd:latest

      - name: Push image to Yandex Container Registry
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/olegturov-ci-cd:latest

      - name: Deploy serverless container revision
        run: |
          yc serverless container revision deploy \
            --container-name my-container \
            --image cr.yandex/${{ secrets.YC_REGISTRY_ID }}/olegturov-ci-cd:latest \
            --memory 512M \
            --cores 1
  
  
